    o  improve uxp / behaviour w.r.t. text size
        *  analysis
        *  decision log
        *  finalize dsl
        *  dedicated branch: textsize
        *  step one privatise the diag with 
        *  min viable image file render solution
        o  add dsl control and tests
            *  set precedent for prescan ops with frame and title
            *  now correct commens on mainpass
            *  add lifeline start in similar way to frame
            o  now have place to put textsize word
                *  get regression tests passing
                o  tdd parser
                    *  that dsl without textsize passes (and without title)
                    o  that dsl with malformed textsize throws correct errors
                        *  experiment with existing errors when input
                        *  textsize garbage must be a number
                        *  textsize out of range
                    *  that dsl without malformed text size passes
                    *  that parsing dsl with textsize produces a well 
                       properly formed statement
                *  tdd diag including default
                    *  lifecycle
                        *  flesh out idea
                        *  move into sub functions
                        *  repair tests
                o  add visual tests
                    o  large font visual example isn't?
                    o  add test that uses default when no textsize statement
                o  make sure text size is in reference script
        o  upgrade image file renderer to do the scaling
        o  explore quality attainable
        o  make sure properly tested
        o  merge to master

    o  refactor parser to switch on keyword(s)
    o  add a test that ensure parser barfs on empty input
    o  document the diagram creation algorithm
    o  make title compulsory
        o  no but put into canonical
    o  careful think tests
        o  do all visual tests earn their keep?
    o  show lane letters - possibly optionally
    o  consider if image regression tests needed - or maybe only canonical?
    o  what happens if you introduce a lifeline late in the script?
    o  what happens if you put title in too late?
    o  question merit of sizer unit test given visual test efficiency
    o  tune settings
    o  many lifelines example suggests self labels might be better off
       going back above the loop and being allowed to go further right
    o  Might be best to hard code and hide the size  - and
       encourage client to scale in context, or to make images big and
       then use image lib to scale to suit?
        o  if so, then make sure no pointless tests
    o  Change reference model to make label not too long, and maybe
       be more computer sciency - plus update readme to suit
    o  Add title keyword which could be "edit me"
    o  virgin clone of umli fails create tests because no directory
       to save in - fix when decide on visual image difference testing
    o  Lifeline should be different mark space than response line
    o  Convenient save / load and view local directory
    o  Web assembly
    o  benchmarks and tuning
    o  update readme
    o  design docco
    o  godoc example
    o  may need to rebrand as uml **sequence** diagram
    o  cf creately and sequencediag.com differentiate
    o  Todo resurrect regressions tests for images
        o  include tinternet examples?


----------------------------------------------------------------------------
----------------------------------------------------------------------------
"Error on this line <textsize> (line: 1): Lifeline name must "+
			"be single, upper case letter")
