    *  improve uxp / behaviour w.r.t. text size
    *  merge to master
    *  move diag docco into high level doc.go, and refer from readme 
    *  refactor parser to switch on keyword(s)
    *  some of the existing visual tests need not be

    o  add a test that ensure parser barfs on empty input
    o  improve all error messages to be fit for a human at run time
    o  careful think tests
        o  do all visual tests earn their keep?
    o  show lane letters - possibly optionally
    o  resolution and crispness
    o  consider if image regression tests needed - or maybe only canonical?
    o  what happens if you introduce a lifeline late in the script?
    o  what happens if you put title in too late?
    o  question merit of sizer unit test given visual test efficiency
    o  tune settings
    o  many lifelines example suggests self labels might be better off
       going back above the loop and being allowed to go further right
    o  Change reference model to make label not too long, and maybe
       be more computer sciency - plus update readme to suit
    o  virgin clone of umli fails create tests because no directory
       to save in - fix when decide on visual image difference testing
    o  Lifeline should be different mark space than response line
    o  Web assembly
    o  benchmarks and tuning
    o  update readme
    o  design docco
    o  godoc example
    o  may need to rebrand as uml **sequence** diagram
        o  incl all refs to umli
    o  cf creately and sequencediag.com differentiate
    o  Todo resurrect regressions tests for images
        o  include tinternet examples?


----------------------------------------------------------------------------
----------------------------------------------------------------------------
"Error on this line <textsize> (line: 1): Lifeline name must "+
			"be single, upper case letter")
