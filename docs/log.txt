*  Specify MVP
*  OOD Design
*  package and type naming
*  change repo name away from swim to interaction
*  change alias to match
*  Start on tiny bit and optimize tooling
    *  Parser
    *  DSLModel
*  Do the geometry model and test it is good for json or yaml serialisation
    *  Firm up this package's contract wrt output
    *  Design model scope
    *  Define the types
*  Test up a JSON serializer  

o  Come back to:
    o  Replace existing tests with gomega calls
    o  Must be way to do parser and dslmodel in less code?
        o  Be interesting to try a fully automated parsing library
    o  Error reporting from parser to include line number and offending line

----------------------------------------------------------------------------
Geom Model Scope
----------------------------------------------------------------------------
*  Refresh the contract available in draw2d
o  Assumptions
    o  DI the canvas size e.g. 297 x 210
    o  No units implied despite approximation to mm
    o  All the geom calcs will then be abstract multiple of pixels
o  Primitives needed:
    o  Line, (style, arrow)
    o  Text with justification
----------------------------------------------------------------------------
Contract for output
----------------------------------------------------------------------------
o  YAML - json - exact same shape as Geom Model
